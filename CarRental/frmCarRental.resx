<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbProfile.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>